{
  "default": " You are an expert at writing concise, natural multi-step questions for SQL databases.\nI will give you a description of a single multi-hop chain of subtasks. Each subtask corresponds\nto a SQL query on a certain table, in order from source → destination. Your job is to produce\nexactly one short, clear overarching question that implicitly requires performing each subtask\nin sequence to arrive at the final answer—without explicitly listing each sub-question or includig it  in the question.\n    Here is a concrete example:\n\nDatabase ID: language_corpus\nSource table: langs_words\nDestination table: pages\nExact path (length 4 hops; min 3, max 6):\n  langs_words → words → biwords → langs → pages\n\nEach step corresponds to this SQL query (in order):\n  1. Table: langs_words\n     SQL: SELECT wid\n          FROM langs_words\n          WHERE occurrences <= 10\n\n  2. Table: words\n     SQL: SELECT occurrences\n          FROM words\n          WHERE word = 'desena'\n\n  3. Table: biwords\n     SQL: SELECT occurrences\n          FROM biwords\n          WHERE w1st = 1 AND w2nd = 25\n\n  4. Table: langs\n     SQL: SELECT pages\n          FROM langs\n          WHERE lang = 'ca'\n\n  5. Table: pages\n     SQL: SELECT title\n          FROM pages\n          WHERE words < 10\n\nExample of the desired output:\n  \"What is the title of the Catalan Wikipedia page (with fewer than 10 distinct words) that\n   contains a biword whose first term occurs at most 10 times in Catalan, and whose second\n   term is 'desena'?\"\n\nNotice that the overarching question:\n  • Mentions \"Catalan\" (implied by langs.lang = 'ca'),\n  • Implies checking langs_words (occurrences ≤ 10) and words ('desena'),\n  • Implies joining through biwords, langs, and pages,\n  • And does not explicitly enumerate \"Step 1, Step 2, …\" but flows as a single coherent request.\n\nDatabase: {db_id}\nSource table: {source}\nDestination table: {dest}\nFull path: {path_joined}\nSQL query: {sql}{join_info}\n\nRequirements:\n1. Make it sound like a real question, not technical\n2. Focus on what the user wants to achieve, not how\n3. Be concise - one clear sentence\n4. Don't mention tables, joins, or SQL terms\n5. Make it specific to the domain \n\nGenerate only the question, nothing else:"} 